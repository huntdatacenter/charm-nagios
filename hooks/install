#!/bin/bash

set -uex

# Tell Juju we're installing
status-set maintenance 'Installing'

# 'apt-get update' can encounter transient failures when the archive servers
# are being updated. To handle this case, just call it a few times.
apt-get update || apt-get update || apt-get update

# If a password file already exists, use the password therein.
PASSWD_FILE="/var/lib/juju/nagios.passwd"
if [[ -e $PASSWD_FILE ]] ; then
  PASSWORD=$(cat $PASSWD_FILE)
else
  # If no password file exists, use the password provided in the charm config.
  # If no password was provided, generate a random password.
  PASSWORD=$(config-get password)
  if [ -z "$PASSWORD" ]; then
    apt-get -y install pwgen --force-yes
    PASSWORD=$(pwgen 10 1)
  fi
  echo $PASSWORD >$PASSWD_FILE
  chmod 0400 $PASSWD_FILE
fi

echo nagios4-cgi nagios4/adminpassword password $PASSWORD | debconf-set-selections
echo nagios4-cgi nagios4/adminpassword-repeat password $PASSWORD | debconf-set-selections

DEBIAN_FRONTEND=noninteractive apt-get -qy \
  install nagios4 nagios-plugins-contrib python3-cheetah python3-jinja2 dnsutils debconf-utils nagios-nrpe-plugin pynag python3-pynag python3-apt python3-yaml

scripts/postfix_loopback_only.sh

if [ -f $CHARM_DIR/files/hostgroups_nagios2.cfg ]; then
    # Write the new hostgroups_nagios2.cfg file to prevent servers being classified as Debian.
    cp -v $CHARM_DIR/files/hostgroups_nagios2.cfg /etc/nagios4/conf.d/hostgroups_nagios2.cfg
    # Remove the services configuration file to eliminiate the need for ssh and localhost groups.
    rm -vf /etc/nagios4/conf.d/services_nagios2.cfg
    # Remove the ext file to eliminate the need for ssh and localhost groups.
    rm -vf /etc/nagios4/conf.d/extinfo_nagios2.cfg
fi

# TODO livestatus need update to work on focal/jammy
enable_livestatus=$(config-get enable_livestatus)
livestatus_path=$(config-get livestatus_path)
livestatus_dir=$(dirname $livestatus_path)

if [ "$enable_livestatus" ] && [ "$enable_livestatus" != "False" ]; then
    # install check-mk-livestatus
    DEBIAN_FRONTEND=noninteractive apt-get -qy install check-mk-livestatus
    # fix permissions on the livestatus directory
    mkdir -p $livestatus_dir
    chown nagios:www-data $livestatus_dir
    chmod ug+rwx $livestatus_dir
    chmod g+s $livestatus_dir
fi

if [ -f $CHARM_DIR/files/index.html ]; then
    # Replace the default index.html file to redirect to nagios4/
    cp -v $CHARM_DIR/files/index.html /var/www/html/index.html
fi

a2enmod auth_digest
a2enmod authz_groupfile
systemctl restart apache2

# || :'s are for idempotency
service nagios4 stop || :
dpkg-statoverride --update --add nagios www-data 2710 /var/lib/nagios4/rw || :
dpkg-statoverride --update --add nagios nagios 751 /var/lib/nagios4 || :
dpkg-statoverride --update --add root root 644 /etc/nagios4/resource.cfg || :
service nagios4 start

# install files needed for sending snmp traps functionality
cp -v $CHARM_DIR/files/mibs/NAGIOS-NOTIFY-MIB /usr/share/snmp/mibs/
cp -v $CHARM_DIR/files/mibs/NAGIOS-ROOT-MIB /usr/share/snmp/mibs/
cp -v $CHARM_DIR/files/mibs/SNMPv2-MIB.txt /usr/share/snmp/mibs/
cp -v $CHARM_DIR/files/mibs/SNMPv2-SMI.txt /usr/share/snmp/mibs/
cp -v $CHARM_DIR/files/mibs/SNMPv2-TC.txt /usr/share/snmp/mibs/
cp -v $CHARM_DIR/files/send-host-trap /usr/local/bin/
cp -v $CHARM_DIR/files/send-service-trap /usr/local/bin/

# For the admin interface
open-port 80

# Tell Juju we're running
status-set active 'ready'

application-version-set "$(dpkg-query --showformat='${Version}' --show nagios4)" || :
